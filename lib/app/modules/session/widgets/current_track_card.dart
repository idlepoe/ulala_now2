import 'package:flutter/material.dart';

import '../../../data/models/session_track.dart';

import 'package:intl/intl.dart'; // ÏãúÍ∞Ñ Ìè¨Îß∑Ïö©

class CurrentTrackCard extends StatelessWidget {
  final SessionTrack track;
  final bool isFavorite;
  final VoidCallback onFavoriteToggle;
  final VoidCallback onSkipTrack; // ‚úÖ Ïä§ÌÇµ ÏΩúÎ∞± Ï∂îÍ∞Ä
  final DateTime now;

  const CurrentTrackCard({
    super.key,
    required this.track,
    required this.isFavorite,
    required this.onFavoriteToggle,
    required this.onSkipTrack, // ‚úÖ ÌïÑÏàò
    required this.now,
  });

  @override
  Widget build(BuildContext context) {
    final start = track.startAt;
    final end = track.endAt;
    final total = end.difference(start).inSeconds;
    final elapsed = now.difference(start).inSeconds.clamp(0, total);
    final endTimeFormatted = DateFormat.Hms().format(end);

    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // üîº Ï†úÎ™© + Ï¶êÍ≤®Ï∞æÍ∏∞ + Ïä§ÌÇµ
          Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Expanded(
                child: Text(
                  track.title,
                  style: const TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                  ),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 2,
                ),
              ),
              IconButton(
                icon: Icon(
                  isFavorite ? Icons.favorite : Icons.favorite_border,
                  color: isFavorite ? Colors.red : Colors.grey,
                ),
                onPressed: onFavoriteToggle,
                tooltip: 'Ï¶êÍ≤®Ï∞æÍ∏∞',
              ),
              IconButton(
                icon: const Icon(Icons.skip_next),
                onPressed: onSkipTrack,
                tooltip: 'ÌòÑÏû¨ Ìä∏Îûô Ïä§ÌÇµ',
              ),
            ],
          ),
          const SizedBox(height: 4),

          // üîΩ ÏÑ§Î™Ö
          Text(
            track.description,
            style: const TextStyle(color: Colors.black54, fontSize: 12),
            maxLines: 2,
            overflow: TextOverflow.ellipsis,
          ),
          const SizedBox(height: 8),

          // üîµ ÏßÑÌñâ Î∞î
          LinearProgressIndicator(
            value: total > 0 ? elapsed / total : 0,
            minHeight: 6,
            backgroundColor: Colors.grey.shade200,
            color: Colors.blueAccent,
            borderRadius: BorderRadius.circular(15),
          ),
          const SizedBox(height: 4),

          // ‚è∞ Ï¢ÖÎ£å ÏãúÍ∞Ñ
          Align(
            alignment: Alignment.centerRight,
            child: Text(
              'Ï¢ÖÎ£å ÏòàÏ†ï: $endTimeFormatted',
              style: TextStyle(fontSize: 12, color: Colors.grey.shade600),
            ),
          ),
        ],
      ),
    );
  }
}
